@page "/identity/Account/Login"

@using Doit_Study_Manager.Data;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject IJSRuntime JSRuntime
<h2 style="margin-top: 1rem;">Login</h2>
<hr>
        <RadzenCard style = "width: 40%">
            <RadzenLogin AllowRegister="true" AllowResetPassword="true" Username=@userName Password=@password
                            Login=@(args => OnLogin(args, "Login with default values"))
                            ResetPassword=@(args => OnResetPassword(args, "Login with default values"))
                            Register=@(args => OnRegister("Login with default values"))
                            Style="margin-bottom: 20px;" />
        </RadzenCard>

@code {
    string userName = "";
    string password = "";

    void OnLogin(LoginArgs args, string name)
    {
        var res = ValidateUser();
    }

    void OnRegister(string name)
    {

    }

    void OnResetPassword(string value, string name)
    {

    }

    private async Task<bool> ValidateUser(){
        ((CustomAuthenticationStateProvider)AuthenticationStateProvider).MarkUserAsAuthenticated(userName);
        NavigationManager.NavigateTo("/");

        await sessionStorage.SetItemAsync("studentCode",userName);

        return await Task.FromResult(true);
    }
}